{"version":3,"sources":["api/accuWeather.js","components/GetWeather.js","components/LocationSelect.js","components/HomeCityWeather.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","useStyles","makeStyles","theme","root","flexGrow","margin","spacing","paper","padding","textAlign","color","palette","text","secondary","GetWeather","location","useState","results","setResults","classes","useEffect","a","accuWeather","get","Key","params","language","apikey","details","metric","data","DailyForecasts","console","log","search","className","Typography","variant","gutterBottom","LocalizedName","Grid","container","item","xs","Temperature","Minimum","Value","Unit","Maximum","button","LocationSelect","setHomeCity","term","setTerm","show","setShow","setlocation","q","Paper","elevation","Autocomplete","id","options","getOptionLabel","option","style","width","onChange","event","newValue","renderInput","TextField","helperText","value","e","target","label","Button","disabled","onClick","HomeCityWeather","homeCity","App","showLocationSelect","setShowLocationSelect","showHomeCity","setShowHomeCity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d7b2136.chunk.js","sourcesContent":["import axios from \"axios\";\r\n//moving apikey here ?\r\n\r\nexport default axios.create({\r\n baseURL: \"https://dataservice.accuweather.com\",\r\n  headers: {\r\n    'Content-Type': \"application/json\",\r\n  }\r\n});","import React, { useEffect, useState } from \"react\";\r\nimport accuWeather from \"../api/accuWeather\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst GetWeather = ({ location }) => {\r\n  const [results, setResults] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  /*this can be refactored to one call together with HomeCityWeather's call*/\r\n//lang detection ?\r\n//detail pointles for test  ?\r\n  useEffect(() => {\r\n    const search = async () => {\r\n      const { data } = await accuWeather.get(\r\n        `/forecasts/v1/daily/1day/${location.Key}`,\r\n        {\r\n          params: {\r\n            language: \"en-gb\",\r\n            apikey: \"jK6AanN43KfPWiwt2mT9U5J27lI9Vh4i\",\r\n            details: false,\r\n            metric: true,\r\n          },\r\n        }\r\n      );\r\n\r\n      setResults(data.DailyForecasts[0]);\r\n      console.log(data);\r\n    };\r\n\r\n    search();\r\n  }, [location]);\r\n\r\n  /* with only one day forecast its pointless no map over results + reusing code with HomeCityWeather ?\r\n   in the long run it would depend on how will this be expanded on*/\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        {`Weather in ${location.LocalizedName}`}\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          Temprature min:\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {results\r\n            ? `${results.Temperature.Minimum.Value} °${results.Temperature.Minimum.Unit}`\r\n            : \"N/A\"}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          Temprature max:\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {results\r\n            ? `${results.Temperature.Maximum.Value} °${results.Temperature.Minimum.Unit}`\r\n            : \"N/A\"}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetWeather;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport accuWeather from \"../api/accuWeather\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GetWeather from \"./GetWeather\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst LocationSelect = ({setHomeCity}) => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [location, setlocation] = useState(\"\");\r\n  \r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const search = async () => {\r\n      const { data } = await accuWeather.get(\r\n        \"/locations/v1/cities/autocomplete\",\r\n        {\r\n          params: {\r\n            q: term,\r\n            language: \"en-gb\",\r\n            apikey: \"jK6AanN43KfPWiwt2mT9U5J27lI9Vh4i\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setResults(data);\r\n      console.log(data);\r\n    };\r\n\r\n    search();\r\n  }, [term]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper} elevation={0}>\r\n            <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={results ? results : []}\r\n              getOptionLabel={results ? (option) => option.LocalizedName : null}\r\n              style={{ width: 300 }}\r\n              onChange={(event, newValue) => {\r\n                setTerm(newValue !== null ? newValue.LocalizedName : \"\")\r\n                setlocation(newValue !== null ? newValue : \"\")\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  helperText=\"Please select city from autocomleted list\"\r\n                  value={term}\r\n                  onChange={(e) => setTerm(e.target.value)}\r\n                  label=\"Enter City\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper} elevation={0}>\r\n            <Button\r\n            disabled = { location ? false : true }\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(e) => setShow(true)}\r\n            >\r\n              Show me weather\r\n            </Button>\r\n            <Button\r\n            disabled = { location ? false : true }\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(e) => setHomeCity(location)}\r\n            >\r\n              Add as home city\r\n            </Button> \r\n          </Paper>\r\n        </Grid>\r\n        {show ? (\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper} elevation={0}>\r\n              <GetWeather location={location} />\r\n            </Paper>\r\n          </Grid>\r\n        ) : null}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport accuWeather from \"../api/accuWeather\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\n\r\nconst HomeCityWeather = ({homeCity}) => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState(\"\");\r\n\r\n/*this can be refactored to one call together with GetWeather's call*/\r\n\r\nuseEffect(() => {\r\n    const search = async () => {\r\n      const { data } = await accuWeather.get(\r\n        `/forecasts/v1/daily/1day/${homeCity.Key}`,\r\n        {\r\n          params: {\r\n            language: \"en-gb\",\r\n            apikey: \"jK6AanN43KfPWiwt2mT9U5J27lI9Vh4i\",\r\n            details: false,\r\n            metric: true,\r\n          },\r\n        }\r\n      );\r\n\r\n      setResults(data.DailyForecasts[0]);\r\n      console.log(data);\r\n    };\r\n\r\n    if (homeCity) {search()};\r\n  }, [homeCity]);\r\n\r\n /* with only one day forecast its pointless no map over results + reusing code with GetWeather ?\r\n   in the long run it would depend on how will this be expanded on*/\r\n\r\n  if (homeCity) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {`Home City - ${homeCity.LocalizedName}`}\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          Temprature min:\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {results\r\n            ? `${results.Temperature.Minimum.Value} °${results.Temperature.Minimum.Unit}`\r\n            : \"N/A\"}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          Temprature max:\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {results\r\n            ? `${results.Temperature.Maximum.Value} °${results.Temperature.Minimum.Unit}`\r\n            : \"N/A\"}\r\n        </Grid>\r\n      </Grid>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Select a home city to use this tab.\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HomeCityWeather;\r\n","import \"./App.css\";\nimport LocationSelect from \"./components/LocationSelect\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport HomeCityWeather from \"./components/HomeCityWeather\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    margin: \"auto\",\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n}));\n\nfunction App() {\n  const [homeCity, setHomeCity] = useState();\n  const [showLocationSelect, setShowLocationSelect] = useState(true);\n  const [showHomeCity, setShowHomeCity] = useState(false);\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" gutterBottom>\n        Weather test app\n      </Typography>\n\n      <Grid container>\n        <Grid item xs={2}>\n          <Button\n            className={\n              classes.button + \" \" + (showLocationSelect ? \"active\" : null)\n            }\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              setShowLocationSelect(true);\n              setShowHomeCity(false);\n            }}\n          >\n            Forecast\n          </Button>\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            className={classes.button + \" \" + (showHomeCity ? \"active\" : null)}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              setShowHomeCity(true);\n              setShowLocationSelect(false);\n            }}\n          >\n            Forecast at home\n          </Button>\n        </Grid>\n      </Grid>\n      { showLocationSelect ? <Grid container>\n        <Grid item xs={12}>\n          <Paper>\n            <LocationSelect setHomeCity={setHomeCity} />\n          </Paper>\n        </Grid>\n      </Grid> : null}\n      { showHomeCity ? <Grid container>\n        <Grid item xs={12}>\n          <Paper>\n            <HomeCityWeather homeCity={homeCity}  />\n          </Paper>\n        </Grid>\n      </Grid> : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}